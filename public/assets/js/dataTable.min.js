class InitDatatable {

    constructor(container, url, data_columns, ajax_type = "GET", params = [], lengthMenu = [5, 10, 20, 50, 100], isFindDataColumn = true, isServerSide = true) {
        this.container = container;
        this.data_columns = data_columns;
        this.url = url;
        this.params = params;
        this.ajax_type = ajax_type;
        this.find_title_class = [];
        this.lengthMenuMainTable = lengthMenu;
        this.isFindDataColumn = isFindDataColumn;
        this.isServerSide = isServerSide;
    }

    dataTableGraphColumn(column) {
        let resData;
        $(`#graph-column-datatable`).html("PROCESSINGG");
        let form_datatable = $(`#findDataIn${this.container}`).serialize();
        $.ajax({
            url: `${this.url}&${form_datatable}`,
            headers: {
                "X-CSRF-TOKEN": $('meta[name="csrf-token"]').attr('content')
            },
            type: "get",
            async: false,
            data: Object.assign({
                type: "graph_column",
                column,
                // limit: 100,
            }, this.params),
            success: function(response) {
                resData = response;
            },
        })

        this.charts("graph-column-datatable", resData)
        this.dataTableTableColumn(column);
    }

    dataTableTableColumn(column) {
        let form_datatable = $(`#findDataIn${this.container}`).serialize();
        let table = $(`#table-column-datatable`).DataTable({
            serverSide: true,
            processing: true,
            destroy: true,
            orderCellsTop: true,
            lengthMenu: [5, 10, 20, 50, 100],
            ajax: {
                url: `${this.url}&${form_datatable}`,
                type: "get",
                headers: {
                    "X-CSRF-TOKEN": $('meta[name="csrf-token"]').attr('content')
                },
                data: Object.assign({
                    type: "table_column",
                    column,
                }, this.params),
                error: function(jqXHR, textStatus, errorThrown) {
                    // Handle the error here
                    console.error("AJAX Error:", textStatus, errorThrown);
                    // You can show an error message to the user or perform other actions
                }
            },
            columns: [
                { data: 'DT_RowIndex', orderable: false, searchable: false },
                { data: column.replace("data_search_", "") },
                { data: 'total', searchable: false },
            ],
        });
        $(`#table-column-datatable-tbody-value`).html(column.replace("data_search_", ""));
    }

    charts(container, data) {
        Highcharts.chart(container, {
            chart: {
                type: 'column'
            },
            title: {
                text: ''
            },
            accessibility: {
                announceNewData: {
                    enabled: true
                }
            },
            xAxis: {
                type: 'category'
            },
            yAxis: {
                title: {
                    text: 'Total Data'
                }

            },
            legend: {
                enabled: false
            },
            plotOptions: {
                series: {
                    borderWidth: 0,
                    dataLabels: {
                        enabled: true,
                        format: '{point.y}'
                    }
                }
            },

            tooltip: {
                headerFormat: '<span style="font-size:11px">{series.name}</span><br>',
                pointFormat: '<span style="color:{point.color}">{point.name}</span>: <b>{point.y}</b> of total<br/>'
            },

            series: [{
                name: (data.request.column).replace("data_search_", ""),
                colorByPoint: true,
                data: data.data
            }],
        });

        return this;
    }

    createTable() {
        this.table = $(`#${this.container}`).DataTable({
            processing: false,
            serverSide: this.isServerSide,
            destroy: true,
            orderCellsTop: true,
            lengthMenu: this.lengthMenuMainTable,
            ajax: {
                url: this.url,
                type: this.ajax_type,
                headers: {
                    "X-CSRF-TOKEN": $('meta[name="csrf-token"]').attr('content')
                },
                data: this.params
            },
            columns: this.data_columns,
        });

        $(`#${this.container}_filter>label>input[type="search"]`).attr('id', `${this.container}_input_search`);
        $(`#${this.container}_filter>label>input[type="search"]`).attr('name', `${this.container}_input_search`);

        let this__ = this;
        this.find_title_class.forEach((element, index) => {
            $(`#${this.container} .${element}`).each(function() {
                this__.table.column(index).search(this.value);
            });

            $(`#${this.container} .${element}`).on('change clear', function() {

                /**
                 * * add some class where search is active
                 * */

                if (this.value != "") {
                    $(`#${this__.container} .${element}`).addClass("bg-info text-light");
                } else {
                    $(`#${this__.container} .${element}`).removeClass("bg-info text-light");
                }
                this.value = this.value.split(",")
                this__.table.column(index).search(this.value, true).draw();
            });
        });

        // this__.table.draw();
    }

    columnSearch() {
        let this__ = this;
        let find_title_class = [];
        $(`#${this__.container} thead.search th`).each(function() {
            let title = $(this).text();
            let title_class = `find-${title.replace(" ", "_")}`;
            find_title_class.push(title_class);
            if (this__.isFindDataColumn && title != "data_search_ID" && title != "data_search_action" && title != "data_search_DT_RowIndex") {
                /**
                 * * add search html tag for every column
                 * */
                let html = `<div class="input-group input-group-sm" style="min-width:30px !important">
                    <a href="javascript:void(0)" data-bs-toggle="modal" data-bs-target="#modalDataTable"
                        id="graph-column-datatable-${this__.container}-${title}" class="input-group-text">
                        <i class="fa fa-bar-chart"></i>
                    </a>
                    <input type="text" class="form-control form-control-sm ${title_class} input-find" name="${title}" placeholder="find" aria-describedby="basic-addon1">
                </div>`;
                $(this).html(html);
                $(`#graph-column-datatable-${this__.container}-${title}`).on('click', function() {
                    this__.dataTableGraphColumn(title)
                })
            } else {
                $(this).html(`-`);
            }
        });
        this.find_title_class = find_title_class;
    }

    autoLoad() {
        this.table.ajax.reload(null, false);
    }
}